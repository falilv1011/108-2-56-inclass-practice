---
title: "2020-3-18"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## packages

安裝package
```{r}
install.packages(c("dplyr", "lubridate"))

```

```{r}
library(googlesheets4)
library(dplyr)
library(lubridate)
```

## Create object

```{r}
a <- 2
a = 2 # = 與 <-同義
```

```{r}
a
```

## variable

```{r}
my_108_total_credits <- 15
_108_total_credits <- 15
108_total_credits <- 15
_my_108_total_credits <- 15
my.108.total_credits <- 15
.108.total_credits <- 15 # 隱藏變數
.my.108.total_credits <- 15
我的108學年總學分數 <- 15
`我的108學年總學分數` <- 15 # 特殊名稱處理，`不是名稱的一部份
`.108.total_credits` <- 15
```

```{r}
`我的年紀` <- 20
my_age <- `我的年紀`
```

## Atomic vecter

```{r}
num1 <- 5
vNum1 <- c(2,5)
vNum2 <- c(2, num1)
```

Vecter stacking
```{r}
vNum1 <- c(-1,5)
vNum2 <- c(2,3)
vNum4 <- c() # 空向量
```

```{r}
vNum3 <- c(vNum2, vNum1)
vNum4 <- c(vNum4, vNum1) # 向量疊代 （recursive vector concatenate）
```

## Different types
```{r}
num1<-5 # 非整數
num2<-5L # 整數

num1Vector<-c(5,6,7)
num2Vector<-c(5L,6L,7L)
```

### Character

```{r}
char1<-"你好"
char2<-'你好'
```

他說:"今天多了一個確診。"

```{r}
HeSaid<-'他說:"今天多了一個確診。"' #裡面有"外面要用' # run了之後\\稱為escape
```



```{r}
library(httr)
library(dplyr)
GET("https://api.github.com/repos/tpemartin/108-2-56-inclass-practice/commits") %>%
  content() %>%
  View()   #游標放在函數名稱任何一個位置，按F1，可查詢函數
```

```{r}
library(googlesheets4)
`出席狀況表單網址` <- "https://docs.google.com/spreadsheets/d/1EAG49qDKPWWi0ebkVr29TLrvVnoBPfkvxYY-J3xLAHY/edit#gid=458686645" # 缺乏定義值
ss <- as_sheets_id(`出席狀況表單網址`)
homework_sheet <- sheets_read(ss,sheet=1)
```

## List
```{r}
vecterExample <- c(2, 6, 7)
listExample <- list(2, 6, 7)

print(vecterExample)
print(listExample)
```

每個元素值可以是不同type的物件值
```{r}
# 用vecter儲存
c("2020-03-31T13:40:55Z",
  "一芳",
  "2",
  "水果茶")

# 用list儲存
library(lubridate)
`小明交易1` <- list(   #小明交易是特殊物件要用反頓點`
  ymd_hms("2020-03-31T13:40:55Z"), # Date/Time class
  "一芳", # character
  2, # numeric
  "水果茶" # character
)
print(`小明交易1`)
```

物件值可以是vector形式，也可以list
```{r}
# 用vecter
c(
  c("108學年第1學期", "高級會計學", "高等統計學"),  #向量1
  c("108學年第2學期", "食在拉丁美洲")  #向量2
)
```

```{r}
# 用list
list( 
  c("108學年第1學期", "高級會計學", "高等統計學"),  #向量1
  c("108學年第2學期", "食在拉丁美洲")  #向量2
  )
```


```{r}
# list含兩個vectors
`小明108學年課表A` <- list(
  c("108-1","高級會計學","高等統計學"),
  c("108-2","食在拉丁美洲")
)
print(`小明108學年課表A`)
```


```{r}
# list含兩個lists
`小明108學年課表B` <- list(
  list("108-1","高級會計學","高等統計學"),
  list("108-2","食在拉丁美洲")
)
print(`小明108學年課表B`)
```

```{r}
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(
  list(
    c("108-1"), # 可只寫 "108-1"
    c("高級會計學","高等統計學")
       ),
  list(
    c("108-2"),
    c("食在拉丁美洲")
  )
)
print(`小明108學年課表C`)
```

物件值可以取名
```{r}
# list含兩個lists, 子層list又各含兩個vectors
`小明108學年課表C` <- list(          
 `上學期`=list(            
    `108學年第1學期`=c("108-1"), # 可只寫 "108-1"  # 將108學年第一學期的lists取名108學年第1學期
    courses=c("高級會計學","高等統計學")           # 取名稱時=把它想成<-，名稱在<-左邊
       ),
  `下學期`=list(            
    `108學年第2學期`=c("108-2"),                   # 將108學年第二學期的lists取名108學年第2學期
    courses=c("食在拉丁美洲")                      # 將課程的list取名courses
  )                                                # run了之後遇到取名會用$表示
)
print(`小明108學年課表C`)
```

## Github Commit

```{r}
commit <- list(
  author=list(                         
    name="Martin老師",                   # 物件值可以取名
    email="mtlin@gm.ntpu.edu.tw", 
    time=ymd_hms("2020-03-25T07:17:40Z")
    ),                                   # author和committer用list比較好，因為有時間要用date/time class
  committer=list(
    name="emilyluckey", 
    email="emily007@gmail.com",
    time=ymd_hms("2020-03-26T08:18:40Z")
    ),
  message="update"                       # 用C或List都可以 # c括號寫不寫都可，因為只是一個簡單的字update
)
print(commit)
```


```{r}
library(jsonlite) # 不少同學這行會有Error，還記得如何排除嗎？
toJSON(commit)
```

## 3.7
```{r}

```





